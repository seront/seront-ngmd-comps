!function(n,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("angular"),require("angular-material"),require("angular-sanitize"),require("angular-translate"),require("angular-material-data-table")):"function"==typeof define&&define.amd?define("md-dytable",["angular","angular-material","angular-sanitize","angular-translate","angular-material-data-table"],t):"object"==typeof exports?exports["md-dytable"]=t(require("angular"),require("angular-material"),require("angular-sanitize"),require("angular-translate"),require("angular-material-data-table")):n["md-dytable"]=t(n.angular,n["angular-material"],n["angular-sanitize"],n["angular-translate"],n["angular-material-data-table"])}(this,function(n,t,e,a,o){return function(n){function t(a){if(e[a])return e[a].exports;var o=e[a]={i:a,l:!1,exports:{}};return n[a].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var e={};return t.m=n,t.c=e,t.d=function(n,e,a){t.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:a})},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},t.p="",t(t.s=1)}([function(t,e){t.exports=n},function(n,t,e){"use strict";function a(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(t,"__esModule",{value:!0});var o=e(0),i=a(o),c=e(2),l=a(c),r=e(3),s=a(r),d=e(4),f=a(d),p=e(5),u=a(p);t.default=i.default.module("md-dytable",[l.default,s.default,f.default,u.default]).name},function(n,e){n.exports=t},function(n,t){n.exports=e},function(n,t){n.exports=a},function(n,t,e){"use strict";function a(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(t,"__esModule",{value:!0});var o=e(0),i=a(o),c=e(6),l=a(c),r=e(7);t.default=i.default.module("md-dytable.table",[l.default]).component("mdDytable",r.TableComponent).name},function(n,t){n.exports=o},function(n,t,e){"use strict";function a(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function n(n,t){for(var e=0;e<t.length;e++){var a=t[e];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(t,e,a){return e&&n(t.prototype,e),a&&n(t,a),t}}(),i=function(){function n(t){a(this,n),this.$filter=t,this.arrayKey=[]}return o(n,[{key:"$onInit",value:function(){this.newConfig=[],this.order(),this.selected=[],this.pagination&&(this.prevLimit=this.pagination.limit,this.prevPage=this.pagination.page)}},{key:"order",value:function(){var n=[];for(var t in this.objectConfig){var e=[t,this.objectConfig[t]];n.push(e)}n.sort(function(n,t){return parseInt(n[1].order,10)>parseInt(t[1].order,10)?1:-1}),this.newConfig=n}},{key:"paginar",value:function(){this.prevLimit===this.pagination.limit&&this.prevPage===this.pagination.page||(this.prevLimit=this.pagination.limit,this.prevPage=this.pagination.page,this.onPaginate({page:this.pagination.page,limit:this.pagination.limit}))}},{key:"$onChanges",value:function(n){if(n.pagination&&n.pagination.currentValue&&(this.pagination=n.pagination.currentValue),n.objectConfig&&(this.objectConfig=n.objectConfig.currentValue,this.arrayKeyFill()),n.actions&&n.actions.currentValue)if(angular.isUndefined(n.actions.currentValue[0])||angular.isUndefined(n.actions.currentValue[0].order))this.actions=angular.copy(n.actions.currentValue);else{var t=[];t.sort(function(n,t){return parseInt(n[1].order,10)>parseInt(t[1].order,10)?1:-1})}if(n.objects&&!angular.isUndefined(n.objects.currentValue)){var e=n.objects.currentValue.length?n.objects.currentValue:[n.objects.currentValue];this.arrayKey.length>0?this.objects=this.arrayValueCheck(e):this.objects=e}}},{key:"arrayKeyFill",value:function(){if(this.objectConfig)for(var n in this.objectConfig)this.objectConfig.hasOwnProperty(n)&&("array-text"!==this.objectConfig[n].type&&"array-object"!==this.objectConfig[n].type||this.arrayKey.push(n))}},{key:"arrayValueCheck",value:function(n){for(var t=0;t<n.length;t++)for(var e=0;e<this.arrayKey.length;e++)if(n[t][this.arrayKey[e]]){var a=n[t][this.arrayKey[e]];n[t][this.arrayKey[e]]=a.length?a:[a]}return n}},{key:"onSelect",value:function(n){this.onSelection({object:n})}},{key:"applyFilter",value:function(n,t,e){return t?this.$filter(t)(n,e):n}}]),n}();t.TableComponent={template:e(8),controller:["$filter",i],bindings:{config:"<",headers:"<",objectConfig:"<",objects:"<",actions:"<",pagination:"<",onPaginate:"&",onAction:"&",onSelection:"&",onDeselection:"&"}}},function(n,t){n.exports='<md-table-container>\n  <table print-table="$ctrl.objects" md-table md-row-select="$ctrl.config.rowSelect" multiple="{{$ctrl.config.multiple}}" ng-model="$ctrl.selected"\n    md-progress="promise">\n    <thead md-head>\n      <tr md-row>\n        <th md-column ng-repeat="header in $ctrl.headers" md-numeric="header.numeric" flex class="table-header">\n          <p translate="{{header.name}}"></p>\n          <md-tooltip ng-if="header.tooltip" ng-class="header.tooltip.style" md-z-index="header.tooltip.zIndex" md-delay="header.tooltip.delay"\n              md-autohide="header.tooltip.autohide">\n              {{header.tooltip.text | translate}}\n            </md-tooltip>\n        </th>\n        <th md-column ng-repeat="action in $ctrl.actions" flex class="table-header">\n\n        </th>\n      </tr>\n    </thead>\n    <tbody md-body>\n      <tr md-row ng-repeat="object in $ctrl.objects track by $index" md-select="object" md-select-id="name" md-on-select="$ctrl.onSelection(object)"\n        md-on-deselect="$ctrl.onDeselection(object)" x-md-auto-select="$ctrl.config.autoSelect" ng-disabled="object[$ctrl.config.rowSelectDisable]"\n        md-auto-select>\n        <td md-cell ng-repeat="conf in $ctrl.newConfig" ng-class="conf[1].cellStyle">\n\n          <md-checkbox ng-if="(conf[1].type === \'checkbox\')" ng-model="object[conf[0]]" aria-label="{{conf[0]}}"\n            ng-change="$ctrl.onAction({name: conf[1].action, object: object})" ng-class="conf[1].style" ng-disabled="conf[1].disabled">\n          </md-checkbox>\n\n          <md-input-container ng-if="(conf[1].type === \'input-text\')" ng-model="object[conf[0]]" aria-label="{{conf[0]}}" ng-class="conf[1].style">\n            <label></label>\n            <input ng-model="object[conf[0]]" ng-change="$ctrl.onAction({name: conf[1].action, object: object})" ng-disabled="conf[1].disabled">\n          </md-input-container>\n\n          <md-input-container ng-if="(conf[1].type === \'input-number\')" ng-model="object[conf[0]]" aria-label="{{conf[0]}}" ng-class="conf[1].style">\n            <label translate="{{conf[1].text}}"></label>\n            <input ng-model="object[conf[0]]"\n            ng-change="$ctrl.onAction({name: conf[1].action, object: object})"\n            type="number"\n             ng-disabled="conf[1].disabled || object[conf[1].options.depends]"\n             min="{{conf[1].options.min}}"\n             max="{{conf[1].options.max}}">\n          </md-input-container>\n\n          <span ng-if="(conf[1].type === \'text\')" ng-class="conf[1].style" ng-disabled="conf[1].disabled" translate="{{object[conf[0]]}}">\n          </span>\n\n          <md-icon ng-if="(conf[1].type === \'icon\')" ng-class="conf[1].style">\n            {{object[conf[0]]}}\n          </md-icon>\n\n          <div ng-if="(conf[1].type === \'icon-set\')">\n            <div ng-repeat="option in conf[1].options">\n              <md-icon ng-if="object[conf[0]] == option.value" ng-class="option.style" >\n            {{option.icon}}\n            </md-icon>\n            </div>\n          </div>\n\n          <div ng-if="(conf[1].type === \'array-text\')" ng-class="conf[1].style">\n              <span ng-repeat="value in object[conf[0]]">\n                <span>\n                  {{value|translate}}\n                  <span ng-if="!$last"></span>\n                </span>\n              </span>\n          </div>\n\n          <div ng-if="(conf[1].type === \'array-object\')" layout="column">\n              <span ng-repeat="value in object[conf[0]] | limitTo: conf[1].limit">\n                  {{value[conf[1].value]}}\n              </span>\n          </div>\n\n\n          <span ng-if="(conf[1].type === \'filter\')" ng-class="conf[1].style">\n              {{$ctrl.applyFilter(object[conf[0]], conf[1].filter, conf[1].option)}}\n          </span>\n\n          <span ng-if="(conf[1].type === \'child\')" ng-class="conf[1].style" ng-disabled="conf[1].disabled">\n         {{object[conf[0]][conf[1].child]}}\n      </span>\n\n          <span ng-if="(conf[1].type === \'copy\')" ng-class="conf[1].style" ng-disabled="conf[1].disabled">\n         {{object[conf[1].copy]}}\n      </span>\n\n          <span ng-if="(conf[1].type === \'filter-copy\')" ng-class="conf[1].style" ng-disabled="conf[1].disabled">\n              {{$ctrl.applyFilter(object[conf[1].copy], conf[1].filter, conf[1].option)}}\n      </span>\n\n          <img ng-if="(conf[1].type === \'image\')" ng-src="{{object[conf[0]]}}" ng-class="conf[1].style" alt="{{conf[1].alt}}"/>\n\n          <span ng-if="(conf[1].type === \'date\')" ng-class="conf[1].style" ng-disabled="conf[1].disabled">\n         {{object[conf[0]]|date: conf[1].format}}\n      </span>\n\n        <div ng-if="conf[1].type === \'switch\'" layout="row">\n        <span  flex></span>\n          <md-switch ng-if="conf[1].type === \'switch\'" ng-model="object[conf[0]]"\n          ng-true-value="{{conf[1].trueValue}}" ng-false-value="{{conf[1].falseValue}}"\n          ng-change="$ctrl.onAction({name: conf[1].action, object: object})" aria-label="{{conf[0]}}" ng-disabled="conf[1].disabled">\n          </md-switch>\n          <span flex></span>\n        </div>\n\n        </td>\n        <td md-cell ng-if="$ctrl.actions && $ctrl.actions.length > 0" ng-repeat="action in $ctrl.actions" ng-class="action.cellStyle">\n          \x3c!-- <div ng-if="(action.type === \'switch\')" layout="row" ng-hide="object[action.hide.property] === action.hide.value"> --\x3e\n          <div ng-if="(action.type === \'switch\')" layout="row" ng-hide="(action.hide && (object[action.hide.property] === action.hide.value))">\n            <span  flex></span>\n          <md-switch ng-change="$ctrl.onAction({name: action.name, object: object})" aria-label="Switch 1"\n            ng-model="object[action.value]" translate="{{action.text|translate}}">\n            <md-tooltip ng-if="action.tooltip" ng-class="action.tooltip.style" md-z-index="action.tooltip.zIndex" md-delay="action.tooltip.delay"\n              md-autohide="action.tooltip.autohide" md-direction="{{action.tooltip.direction}}">\n              {{action.tooltip.text | translate}}\n            </md-tooltip>\n          </md-switch>\n           <span flex></span>\n          </div>\n\n\n          <md-button ng-if="(action.type === \'button\')" ng-class="action.style" ng-click="$ctrl.onAction({name: action.name, object: object})"\n            aria-label="{{action.name}}" ng-hide="(action.hide && (object[action.hide.property] === action.hide.value))">\n            <md-icon ng-if="action.icon" ng-class="action.icon.style">\n              {{action.icon.name}}\n            </md-icon>\n            <md-tooltip ng-if="action.tooltip" ng-class="action.tooltip.style" md-z-index="action.tooltip.zIndex" md-delay="action.tooltip.delay"\n              md-autohide="action.tooltip.autohide" md-direction="{{action.tooltip.direction}}">\n              {{action.tooltip.text | translate}}\n            </md-tooltip>\n            <span ng-if="action.text">\n              {{action.text|translate}}\n            </span>\n          </md-button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</md-table-container>\n\n<md-table-pagination print-remove ng-if="$ctrl.pagination" ng-class="$ctrl.pagination.style" md-limit="$ctrl.pagination.limit"\nmd-limit-options="$ctrl.pagination.limitOptions"\n  md-page="$ctrl.pagination.page" md-total="{{$ctrl.pagination.total}}" md-page-select="$ctrl.pagination.pageSelect" md-boundary-links="$ctrl.pagination.boundaryLinks"\n  md-on-paginate="$ctrl.paginar(page, limit)" md-label="{{$ctrl.pagination.label}}" md-foot-label="$ctrl.pagination.footLabel">\n</md-table-pagination>\n'}])});
//# sourceMappingURL=md-dytable.js.map